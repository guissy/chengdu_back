generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model City {
  id        String     @id @default(uuid())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  districts District[]

  @@map("cities")
}

model District {
  id        String   @id @default(uuid())
  name      String
  cityId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cbds      CBD[]
  city      City     @relation(fields: [cityId], references: [id])

  @@map("districts")
}

model CBD {
  id         String   @id @default(uuid())
  name       String
  addr       String?
  districtId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  district   District @relation(fields: [districtId], references: [id])
  parts      Part[]
  shops      Shop[]

  @@map("cbds")
}

model Part {
  id        String     @id @default(uuid())
  name      String
  sequence  Int
  cbdId     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cbd       CBD        @relation(fields: [cbdId], references: [id])
  positions Position[]
  shops     Shop[]

  @@map("parts")
}

model Position {
  id             String    @id @default(uuid())
  position_no    String
  partId         String
  total_space    Int       @default(0)
  put_space      Int       @default(0)
  price_base     Int
  verified       Boolean   @default(false)
  displayed      Boolean   @default(true)
  type           ShopType?
  type_tag       String?
  photo          String[]
  remark         String?
  business_hours Int[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  shopId         String?   @unique
  part           Part      @relation(fields: [partId], references: [id])
  shop           Shop?     @relation(fields: [shopId], references: [id])

  @@map("positions")
}

model Shop {
  id                String            @id @default(uuid())
  shop_no           String
  cbdId             String
  partId            String
  type              ShopType
  type_tag          String?
  business_type     BusinessType
  trademark         String
  branch            String?
  location          Float[]
  verified          Boolean           @default(false)
  duration          OperationDuration
  consume_display   Boolean           @default(true)
  average_expense   Int[]
  sex               Gender            @default(ALL)
  age               Int[]
  id_tag            String?
  sign_photo        String?
  verify_photo      String[]
  environment_photo String[]
  building_photo    String[]
  brand_photo       String[]
  contact_name      String?
  contact_phone     String?
  contact_type      ContactType?
  total_area        Int?
  customer_area     Int?
  clerk_count       Int?
  business_hours    Int[]
  rest_days         RestDay[]
  volume_peak       PeakTime[]
  season            Season[]
  shop_description  String?
  put_description   String?
  displayed         Boolean           @default(true)
  price_base        Int
  classify_tag      String?
  remark            String?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  position          Position?
  cbd               CBD               @relation(fields: [cbdId], references: [id])
  part              Part              @relation(fields: [partId], references: [id])
  spaces            Space[]

  @@map("shops")
}

model Space {
  id                     String          @id @default(uuid())
  shopId                 String
  type                   SpaceType
  setting                Json
  count                  Int             @default(1)
  state                  SpaceState      @default(ENABLED)
  price_factor           Float           @default(1.0)
  tag                    String?
  site                   SpaceSite?
  stability              SpaceStability?
  photo                  String[]
  description            String?
  design_attention       String?
  construction_attention String?
  createdAt              DateTime        @default(now())
  updatedAt              DateTime        @updatedAt
  shop                   Shop            @relation(fields: [shopId], references: [id])

  @@map("spaces")
}

model AuditLog {
  id            String          @id @default(uuid())
  operationType OperationType
  targetType    OperationTarget
  targetId      String
  targetName    String
  content       String
  operatorId    String
  operatorName  String
  operationTime DateTime        @default(now())
  details       Json?
  ipAddress     String?
  userAgent     String?

  @@index([operationType])
  @@index([targetType])
  @@index([operatorId])
  @@index([operationTime])
  @@map("audit_logs")
}

enum ShopType {
  RESTAURANT  @map("1")
  LIGHT_FOOD  @map("2")
  TEA_HOUSE   @map("3")
  TEA_COFFEE  @map("4")
  COFFEE_SHOP @map("5")
  HOTEL       @map("6")
}

enum BusinessType {
  INDEPENDENT     @map("1")
  CHAIN_DIRECT    @map("2")
  CHAIN_FRANCHISE @map("3")
}

enum Gender {
  ALL    @map("1")
  MALE   @map("2")
  FEMALE @map("3")
}

enum ContactType {
  OWNER        @map("1")
  MANAGER      @map("2")
  STAFF        @map("3")
  HEADQUARTERS @map("4")
}

enum OperationDuration {
  LESS_THAN_ONE  @map("1")
  ONE_TO_TWO     @map("2")
  TWO_TO_FIVE    @map("3")
  MORE_THAN_FIVE @map("4")
}

enum RestDay {
  MONDAY    @map("1")
  TUESDAY   @map("2")
  WEDNESDAY @map("3")
  THURSDAY  @map("4")
  FRIDAY    @map("5")
  SATURDAY  @map("6")
  SUNDAY    @map("7")
  ON_DEMAND @map("8")
}

enum PeakTime {
  BREAKFAST  @map("1")
  LUNCH      @map("2")
  DINNER     @map("3")
  LATE_NIGHT @map("4")
  MORNING    @map("5")
  AFTERNOON  @map("6")
  EVENING    @map("7")
  MIDNIGHT   @map("8")
}

enum Season {
  SPRING      @map("1")
  SUMMER      @map("2")
  AUTUMN      @map("3")
  WINTER      @map("4")
  HOLIDAY     @map("5")
  WORKDAY     @map("6")
  NON_WORKDAY @map("7")
}

enum SpaceType {
  TABLE_STICKER  @map("1")
  TABLE_PLACEMAT @map("2")
  STAND          @map("3")
  X_BANNER       @map("4")
  TV_LED         @map("5")
  PROJECTOR      @map("6")
}

enum SpaceState {
  ENABLED  @map("1")
  DISABLED @map("2")
}

enum SpaceSite {
  MAIN_AREA        @map("1")
  SHOP_ENTRANCE    @map("2")
  ENTRANCE_PASSAGE @map("3")
  PRIVATE_ROOM     @map("4")
  TOILET_PASSAGE   @map("5")
  TOILET           @map("6")
  OUTDOOR_AREA     @map("7")
  OUTSIDE_WALL     @map("8")
  STREET_WALL      @map("9")
}

enum SpaceStability {
  FIXED      @map("1")
  SEMI_FIXED @map("2")
  MOVABLE    @map("3")
  TEMPORARY  @map("4")
}

enum OperationType {
  BROWSE @map("browse") // 查看
  CREATE @map("create") // 新增
  UPDATE @map("update") // 编辑
  DELETE @map("delete") // 删除
}

enum OperationTarget {
  CBD      @map("cbd")
  PART     @map("part")
  POSITION @map("position")
  SHOP     @map("shop")
  SPACE    @map("space")
  DASHBOARD @map("dashboard")
  CITY     @map("city")
  DISTRICT @map("district") // 行政区划
}
